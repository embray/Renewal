# docker-compose file for development only; do not use in production
version: "3.6"
services:
    # This is a special service that runs some setup commands and exits,
    # freeing the user of this docker-compose file from having to perform
    # these steps manually.  In particular it
    #
    # * Installs a default list of feeds from feeds.json
    # * Registers a baseline recsystem (just one for now, maybe more later)
    #   and stores its token in a volume which is mounted by the
    #   recsys_baseline service.
    #
    # These steps use the renewalctl admin CLI, which requires the controller
    # to already be running before the commands can be called.
    init:
        build:
            context: ..
            dockerfile: docker/Dockerfile
        depends_on:
            - controller
        environment:
            RABBITMQ_HOST: rabbitmq
            RABBITMQ_PORT: 5672
        volumes:
            - "renewal_config:/etc/renewal"
        entrypoint: ""
        command: [ "/bin/bash", "docker/init.sh" ]

    rabbitmq:
        image: rabbitmq:3.7-management-alpine
        ports:
            # queue + management console
            - "5672:5672"
            - "15672:15672"
    mongo:
        image: mongo:4.2
        ports:
            - "27017:27017"
        volumes:
            - "mongo:/data/db"

    # backend microservices
    controller:
        build:
            context: ..
            dockerfile: docker/Dockerfile
        environment:
            RABBITMQ_HOST: rabbitmq
            RABBITMQ_PORT: 5672
            MONGODB_HOST: mongo
            MONGODB_PORT: 27017
        depends_on:
            - rabbitmq
            - mongo
            - crawler.feeds
            - crawler.articles
            - crawler.images
            - scraper
        volumes:
            - "..:/usr/src/app"
        command: renewal_backend.controller

    crawler.feeds:
        build:
            context: ..
            dockerfile: docker/Dockerfile
        environment:
            RABBITMQ_HOST: rabbitmq
            RABBITMQ_PORT: 5672
        depends_on:
            - rabbitmq
            - crawler.articles
        volumes:
            - "..:/usr/src/app"
        command: renewal_backend.crawlers.feed

    crawler.articles:
        build:
            context: ..
            dockerfile: docker/Dockerfile
        environment:
            RABBITMQ_HOST: rabbitmq
            RABBITMQ_PORT: 5672
        depends_on:
            - rabbitmq
            - crawler.images
            - scraper
        volumes:
            - "..:/usr/src/app"
        command: renewal_backend.crawlers.article

    crawler.images:
        build:
            context: ..
            dockerfile: docker/Dockerfile
        environment:
            RABBITMQ_HOST: rabbitmq
            RABBITMQ_PORT: 5672
        depends_on:
            - rabbitmq
        volumes:
            - "..:/usr/src/app"
        command: renewal_backend.crawlers.image

    scraper:
        build:
            context: ..
            dockerfile: docker/Dockerfile
        environment:
            RABBITMQ_HOST: rabbitmq
            RABBITMQ_PORT: 5672
        depends_on:
            - rabbitmq
        volumes:
            - "..:/usr/src/app"
        command: renewal_backend.scraper

    web:
        build:
            context: ..
            dockerfile: docker/Dockerfile
        environment:
            RABBITMQ_HOST: rabbitmq
            RABBITMQ_PORT: 5672
            MONGODB_HOST: mongo
            MONGODB_PORT: 27017
        depends_on:
            - rabbitmq
            - mongo
        volumes:
            - "..:/usr/src/app"
        ports:
            - "8080:8080"
        command: renewal_backend.web

    # One random baseline recommendation system; we need at least one
    # baseline recommender to make everything work.
    recsys_baseline:
        build:
            context: ../../recsystems
        depends_on:
            - init
            - web
        environment:
            RENEWAL_API_BASE_URI: http://web:8080/api/v1/
            RENEWAL_TOKEN: /etc/renewal/baseline-random-1.jwt
        volumes:
            - "renewal_config:/etc/renewal"
        # The token file might not be available immediately which will result
        # in an error; restart until we can get up-and-running
        restart: "on-failure"

volumes:
    mongo:
    renewal_config:
